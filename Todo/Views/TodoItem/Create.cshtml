@using Microsoft.AspNetCore.Identity
@using Todo.Data
@using Todo.Data.Entities
@using Todo.Views.TodoItem
@model Todo.Models.TodoItems.TodoItemCreateFields

@{
    ViewData["Title"] = $"New Item in {Model.TodoListTitle}";
}


@inject ApplicationDbContext dbContext

<h2>@ViewData["Title"]</h2>

<div class="col-md-4">
    <section>
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.TodoListTitle)

            <div id="test" class="form-group">
                <label asp-for="Title"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Importance"></label>
                @Html.DropDownListFor(
                    m => m.Importance,
                    SelectListConvenience.ImportanceSelectListItems,
                    new {@class="form-control"}
                    )
                <span asp-validation-for="Importance" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ResponsiblePartyId">Responsible Person</label>
                @Html.DropDownListFor(
                    m => m.ResponsiblePartyId,
                    dbContext.UserSelectListItems(),
                    new {@class="form-control"}
                    )
                <span asp-validation-for="ResponsiblePartyId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <a href="#" id="SaveItemButton" class="btn btn-default">Save</a>
            </div>
    </section>
</div>

<script type="text/javascript">
    function initialize() {
        $("#SaveItemButton").click(function () {

            const url = window.location.origin + "/TodoItem/Create";
            const urlParams = new URLSearchParams(window.location.search);
            const todoListId = urlParams.get('todoListId');
            const importance = $('#Importance').val();
            let importanceParsed = 0;
            switch(importance) {
                case 'Low':
                    importanceParsed = 2;
                    break;
                case 'Medium':
                    importanceParsed = 1;
                    break;
                case 'High':
                    importanceParsed = 0;
                    break;
            }

            const request = {
                "Title": $('#Title').val(),
                "TodoListId": todoListId,
                "ResponsiblePartyId": $('#ResponsiblePartyId').val(),
                "Importance": importanceParsed,
                "Rank": 0
            };

            $.ajax({
                url: url,
                method: "POST",
                data: JSON.stringify(request),
                contentType: "application/json; charset=utf-8",
                headers: {
                    "RequestVerificationToken": $('input[name = __RequestVerificationToken]').val()
                },
                success: function (response) {
                    location.reload();
                },
                error: function (err) {

                }
            });
        });
    }

    initialize();
</script>